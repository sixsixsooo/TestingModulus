# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Conversation {
  lastMessage: Message!
  unreadCount: Int!
  user: User!
}

input CreateMessageInput {
  content: String!
  receiverId: ID!
  senderId: ID!
}

input CreateUserInput {
  age: Float!
  bio: String
  email: String!
  gender: String!
  images: [String!]
  interestedIn: String!
  location: String
  name: String!
  password: String!
  profileImage: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Like {
  createdAt: DateTime!
  fromUser: User!
  id: ID!
  toUser: User!
}

type Message {
  content: String!
  createdAt: DateTime!
  id: ID!
  isRead: Boolean!
  receiver: User!
  sender: User!
}

type Mutation {
  createMessage(createMessageInput: CreateMessageInput!): Message!
  createUser(createUserInput: CreateUserInput!): User!
  likeUser(fromUserId: ID!, toUserId: ID!): Like!
  markAsRead(messageId: ID!): Message!
  markConversationAsRead(otherUserId: ID!, userId: ID!): Boolean!
  removeUser(id: ID!): Boolean!
  updateUser(id: ID!, updateUserInput: UpdateUserInput!): User!
}

type Query {
  conversation(userId1: ID!, userId2: ID!): [Message!]!
  conversations(userId: ID!): [Conversation!]!
  likedUsers(userId: ID!): [User!]!
  matches(userId: ID!): [User!]!
  potentialMatches(userId: ID!): [User!]!
  user(id: ID!): User!
  users: [User!]!
}

type Subscription {
  messageAdded: Message!
}

input UpdateUserInput {
  age: Float
  bio: String
  email: String
  gender: String
  images: [String!]
  interestedIn: String
  location: String
  name: String
  password: String
  profileImage: String
}

type User {
  age: Float!
  bio: String
  createdAt: DateTime!
  email: String!
  gender: String!
  id: ID!
  images: [String!]
  interestedIn: String!
  location: String
  name: String!
  profileImage: String
  updatedAt: DateTime!
}